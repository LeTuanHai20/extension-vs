import * as vscode from 'vscode';
export declare class Log {
    private readonly configSection;
    private readonly workspaceFolder;
    private readonly outputChannelName;
    private targets;
    constructor(configSection: string, workspaceFolder: vscode.WorkspaceFolder, outputChannelName: string);
    readonly enabled: boolean;
    debug(msg: string): void;
    info(msg: string): void;
    warn(msg: string): void;
    error(msg: string): void;
    dispose(): void;
    private log;
    private configure;
}
interface ILogTarget {
    write(msg: string): void;
    dispose(): void;
}
export declare class OutputChannelTarget implements ILogTarget {
    private outputChannel;
    constructor(name: string);
    write(msg: string): void;
    dispose(): void;
}
export declare class FileTarget implements ILogTarget {
    private readonly buffered;
    private fd;
    private writing;
    constructor(filename: string);
    write(msg: string): void;
    dispose(): void;
    /** must only be called if `this.fd` is set and `this.writing` is `false` */
    private writeNext;
    /** must only be called if `this.fd` is set and `this.writing` is `false` */
    private writeNow;
}
export {};
