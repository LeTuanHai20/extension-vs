"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const r=require("vscode"),os=require("./state"),ps=require("./testNode");class vs{constructor(t,s,i,e){this.collection=t,this.info=s,this.parent=i,this.neededUpdates="none",this.log=void 0,this.$t=s.children.map(s=>"test"===s.type?new ps.TestNode(t,s,this,e):new vs(t,s,this,e)),this.At=os.parentNodeState(this.$t)}get state(){return this.At}get children(){return this.$t}recalcState(){for(const t of this.children)t instanceof vs&&t.recalcState();if("recalc"===this.neededUpdates){const t=os.parentCurrentNodeState(this.children),s=os.parentPreviousNodeState(this.children),i=os.parentAutorunFlag(this.children);this.state.current!==t||this.state.previous!==s||this.state.autorun!==i?(this.state.current=t,this.state.previous=s,this.state.autorun=i,this.neededUpdates="send",this.parent&&(this.parent.neededUpdates="recalc"),this.info.file&&this.collection.explorer.decorator.updateDecorationsFor(this.info.file)):this.neededUpdates="none"}}retireState(){for(const t of this.$t)t.retireState();this.neededUpdates="recalc"}resetState(){for(const t of this.$t)t.resetState();this.neededUpdates="recalc"}setAutorun(t){for(const s of this.$t)s.setAutorun(t);this.neededUpdates="recalc"}getTreeItem(){"recalc"===this.neededUpdates&&this.recalcState(),this.neededUpdates="none";let t=this.info.label;void 0===this.parent&&this.collection.adapter.workspaceFolder&&r.workspace.workspaceFolders&&r.workspace.workspaceFolders.length>1&&(t=`${this.collection.adapter.workspaceFolder.name} - ${t}`);const s=new r.TreeItem(t,r.TreeItemCollapsibleState.Collapsed);return s.iconPath=this.collection.explorer.iconPaths[os.stateIcon(this.state)],s.contextValue=this.parent?"suite":"collection",s}}exports.TestSuiteNode=vs;