"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const os = require("os");
const child_process_1 = require("child_process");
function detectNodePath() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            if (os.platform() === 'win32') {
                return (yield execPromise("where node")).trim();
            }
            else {
                return (yield execPromise("which node")).trim();
            }
        }
        catch (e) {
            return;
        }
    });
}
exports.detectNodePath = detectNodePath;
function execPromise(cmd) {
    return new Promise((resolve, reject) => {
        child_process_1.exec(cmd, (err, stdout) => {
            if (err) {
                reject(err);
            }
            else {
                resolve(stdout);
            }
        });
    });
}
