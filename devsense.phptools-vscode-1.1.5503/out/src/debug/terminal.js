"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const sr=require("path"),ir=require("fs"),ar=require("child_process");class lr{static launchInTerminal(e,r,n){return this.terminalService().launchInTerminal(e,r,n)}static killTree(e){return this.terminalService().killTree(e)}static isOnPath(e){return this.terminalService().isOnPath(e)}static terminalService(){return this.ee||("win32"===process.platform?this.ee=new hr:"darwin"===process.platform?this.ee=new wr:"linux"===process.platform?this.ee=new mr:this.ee=new ur),this.ee}}exports.Terminal=lr;class ur{launchInTerminal(e,r,n){throw new Error("launchInTerminal not implemented")}killTree(e){return new Promise((r,n)=>{try{const t=sr.join(__dirname,"./terminateProcess.sh"),s=ar.spawnSync(t,[e.toString()]);s.error?n(s.error):r()}catch(e){n(e)}})}isOnPath(e){return!0}}ur.re="VS Code Console";class hr extends ur{launchInTerminal(e,r,n){return new Promise((t,s)=>{const i=["/c","start",`"${e} - ${hr.re}"`,"/wait","cmd.exe","/c",`""${r.join('" "')}" & pause"`],o=dr(dr({},process.env),n),c={cwd:e,env:o,windowsVerbatimArguments:!0},a=ar.spawn(hr.CMD,i,c);a.on("error",s),t(a)})}killTree(e){return new Promise((r,n)=>{const t=`taskkill /F /T /PID ${e}`;try{ar.execSync(t),r()}catch(e){n(e)}})}}hr.CMD="cmd.exe";class mr extends ur{launchInTerminal(e,r,n){return new Promise((t,s)=>{if(!ir.existsSync(mr.ne))return void s(new Error(`Cannot find '${mr.ne}' for launching the node program. See http://go.microsoft.com/fwlink/?linkID=534832#_20002`));const i=`cd "${e}"; "${r.join('" "')}"; echo; read -p "${mr.te}" -n1;`,o=["--title",`"${mr.re}"`,"-x","bash","-c",`''${i}''`],c={env:dr(dr({},process.env),n)},a=ar.spawn(mr.ne,o,c);a.on("error",s),a.on("exit",e=>{0===e?t():s(new Error("exit code: "+e))})})}}mr.ne="/usr/bin/gnome-terminal",mr.te="Press any key to continue...";class wr extends ur{launchInTerminal(e,r,n){return new Promise((t,s)=>{const i=[sr.join(__dirname,"./terminalHelper.scpt"),"-t",wr.re,"-w",e];for(const e of r)i.push("-pa"),i.push(e);if(n)for(const e in n)i.push("-e"),i.push(e+"="+n[e]);let o="";const c=ar.spawn(wr.OSASCRIPT,i);c.on("error",s),c.stderr.on("data",e=>{o+=e.toString()}),c.on("exit",e=>{0===e?t():s(o?new Error(o):new Error("exit code: "+e))})})}}function dr(e,r){for(let n in r)r.hasOwnProperty(n)&&(e[n]=r[n]);return e}wr.OSASCRIPT="/usr/bin/osascript";